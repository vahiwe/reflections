What happens when you initialize a repository? Why do you need to do it?
it creates a file .git that keeps records of commits on files in the directory

How is the staging area different from the working directory and the repository?
What value do you think it offers?
the staging area acts as middleman between the working directory and commit thereby helping you seperate files
you want committed from the ones you dont want committed  

How can you use the staging area to make sure you have one commit per logical
change?
you can add the relevant files you want to commit to the staging area before committing 
thus any file you dont want to commit doesnt go to the staging area

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
branches are useful when you want to add a feature or carry out an experiment on your project
but you dont want it to affect your already working program then you branch out and work on
it seperately from the main branch

How do the diagrams help you visualize the branch structure?
it helps you to know commits that are not reachable when you run git log on a branch

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
merging two branches creates a commit that has a history of all commits on the two branches and
combines the changes made on all files
we represent it that way because it's a link between the two branches


What are the pros and cons of Git's automatic merging vs. always doing merges
manually
doing merges manually ensures that you know ur code is satisfactory to you before
merging to the master branch unlike automatic that could merge branches without 
knowing if the code is satisfactory


